# 火车票查询场景
version: '3'
services:
  eureka-demo:
    build: eureka-registry
    image: eureka-registry
    restart: always
    ports:
      - 8030:8030
    networks:
      - my-network

  zuul-station:
    build: zuul-station
    image: zuul-station
    restart: always
    ports:
      - 30001:30001
    networks:
      - my-network

  ts-station-service:
    build: ts-station-service
    image: ts-station-service
    restart: always
    ports:
      - 12345:12345
    networks:
      - my-network

  ts-station-service-2:
    build: ts-station-service
    image: ts-station-service
    restart: always
    ports:
      - 12001:12345
    networks:
      - my-network

  ts-station-service-3:
    build: ts-station-service
    image: ts-station-service
    restart: always
    ports:
      - 12002:12345
    networks:
      - my-network

  ts-station-service-4:
    build: ts-station-service
    image: ts-station-service
    restart: always
    ports:
      - 12003:12345
    networks:
      - my-network

  ts-station-service-5:
    build: ts-station-service
    image: ts-station-service
    restart: always
    ports:
      - 12004:12345
    networks:
      - my-network

  zuul-train:
    build: zuul-train
    image: zuul-train
    restart: always
    ports:
      - 30002:30002
    networks:
      - my-network

  ts-train-service:
    build: ts-train-service
    image: ts-train-service
    restart: always
    ports:
      - 14567:14567
    networks:
      - my-network

  ts-train-service-2:
    build: ts-train-service
    image: ts-train-service
    restart: always
    ports:
      - 12005:14567
    networks:
      - my-network

  ts-train-service-3:
    build: ts-train-service
    image: ts-train-service
    restart: always
    ports:
      - 12006:14567
    networks:
      - my-network

  ts-train-service-4:
    build: ts-train-service
    image: ts-train-service
    restart: always
    ports:
      - 12007:14567
    networks:
      - my-network

  ts-train-service-5:
    build: ts-train-service
    image: ts-train-service
    restart: always
    ports:
      - 12008:14567
    networks:
      - my-network

  zuul-price:
    build: zuul-price
    image: zuul-price
    restart: always
    ports:
      - 30003:30003
    networks:
      - my-network

  ts-price-service:
    build: ts-price-service
    image: ts-price-service
    restart: always
    ports:
      - 16579:16579
    networks:
      - my-network

  ts-price-service-2:
    build: ts-price-service
    image: ts-price-service
    restart: always
    ports:
      - 12009:16579
    networks:
      - my-network

  ts-price-service-3:
    build: ts-price-service
    image: ts-price-service
    restart: always
    ports:
      - 12010:16579
    networks:
      - my-network

  ts-price-service-4:
    build: ts-price-service
    image: ts-price-service
    restart: always
    ports:
      - 12011:16579
    networks:
      - my-network

  ts-price-service-5:
    build: ts-price-service
    image: ts-price-service
    restart: always
    ports:
      - 12012:16579
    networks:
      - my-network

  zuul-route:
    build: zuul-route
    image: zuul-route
    restart: always
    ports:
      - 30004:30004
    networks:
      - my-network

  ts-route-service:
    build: ts-route-service
    image: ts-route-service
    restart: always
    ports:
      - 11178:11178
    networks:
      - my-network

  ts-route-service-2:
    build: ts-route-service
    image: ts-route-service
    restart: always
    ports:
      - 12013:11178
    networks:
      - my-network

  ts-route-service-3:
    build: ts-route-service
    image: ts-route-service
    restart: always
    ports:
      - 12014:11178
    networks:
      - my-network

  ts-route-service-4:
    build: ts-route-service
    image: ts-route-service
    restart: always
    ports:
      - 12015:11178
    networks:
      - my-network

  ts-route-service-5:
    build: ts-route-service
    image: ts-route-service
    restart: always
    ports:
      - 12016:11178
    networks:
      - my-network

  zuul-basic:
    build: zuul-basic
    image: zuul-basic
    restart: always
    ports:
      - 30005:30005
    networks:
      - my-network

  ts-basic-service:
    build: ts-basic-service
    image: ts-basic-service
    restart: always
    ports:
      - 15680:15680
    networks:
      - my-network

  ts-basic-service-2:
    build: ts-basic-service
    image: ts-basic-service
    restart: always
    ports:
      - 12017:15680
    networks:
      - my-network

  ts-basic-service-3:
    build: ts-basic-service
    image: ts-basic-service
    restart: always
    ports:
      - 12018:15680
    networks:
      - my-network

  ts-basic-service-4:
    build: ts-basic-service
    image: ts-basic-service
    restart: always
    ports:
      - 12019:15680
    networks:
      - my-network

  ts-basic-service-5:
    build: ts-basic-service
    image: ts-basic-service
    restart: always
    ports:
      - 12020:15680
    networks:
      - my-network

  zuul-payment:
    build: zuul-payment
    image: zuul-payment
    restart: always
    ports:
      - 30006:30006
    networks:
      - my-network

  ts-payment-service:
    build: ts-payment-service
    image: ts-payment-service
    restart: always
    ports:
      - 19001:19001
    networks:
      - my-network

  zuul-inside-payment:
    build: zuul-inside-payment
    image: zuul-inside-payment
    restart: always
    ports:
      - 30007:30007
    networks:
      - my-network

  ts-inside-payment-service:
    build: ts-inside-payment-service
    image: ts-inside-payment-service
    restart: always
    ports:
      - 18673:18673
    networks:
      - my-network

  zuul-order:
    build: zuul-order
    image: zuul-order
    restart: always
    ports:
      - 30008:30008
    networks:
      - my-network

  ts-order-service:
    build: ts-order-service
    image: ts-order-service
    restart: always
    ports:
      - 12031:12031
    networks:
      - my-network

  zuul-order-other:
    build: zuul-order-other
    image: zuul-order-other
    restart: always
    ports:
      - 30009:30009
    networks:
      - my-network

  ts-order-other-service:
    build: ts-order-other-service
    image: ts-order-other-service
    restart: always
    ports:
      - 12032:12032
    networks:
      - my-network


  zuul-notification:
    build: zuul-notification
    image: zuul-notification
    restart: always
    ports:
      - 30010:30010
    networks:
      - my-network

  ts-notification-service:
    build: ts-notification-service
    image: ts-notification-service
    restart: always
    ports:
      - 17853:17853
    networks:
      - my-network


  zuul-user:
    build: zuul-user
    image: zuul-user
    restart: always
    ports:
      - 30011:30011
    networks:
      - my-network

  ts-user-service:
    build: ts-user-service
    image: ts-user-service
    restart: always
    ports:
      - 12342:12342
    networks:
      - my-network


  zuul-cancel:
    build: zuul-cancel
    image: zuul-cancel
    restart: always
    ports:
      - 30012:30012
    networks:
      - my-network

  ts-cancel-service:
    build: ts-cancel-service
    image: ts-cancel-service
    restart: always
    ports:
      - 18885:18885
    networks:
      - my-network

  redis:
    image: redis
    ports:
      - 6379:6379
    networks:
      - my-network

  ts-ui-dashboard:
    build: ts-ui-dashboard
    image: ts-ui-dashboard
    restart: always
    ports:
      - 8080:8080
    networks:
      - my-network

  ts-auth-service:
    build: ts-auth-service
    image: ts-auth-service
    restart: always
    ports:
      - 12340:12340
    networks:
      - my-network

  ts-auth-mongo:
    image: mongo
    networks:
      - my-network

  ts-user-mongo:
    image: mongo
    networks:
      - my-network

  ts-verification-code-service:
    build: ts-verification-code-service
    image: ts-verification-code-service
    restart: always
    ports:
      - 15678:15678
    networks:
      - my-network


  ts-account-mongo:
    image: mongo
    networks:
      - my-network


  ts-route-mongo:
    image: mongo
    networks:
      - my-network

  ts-contacts-service:
    build: ts-contacts-service
    image: ts-contacts-service
    restart: always
    ports:
      - 12347:12347
    networks:
      - my-network

  ts-contacts-mongo:
    image: mongo
    networks:
      - my-network

  ts-order-mongo:
    image: mongo
    networks:
      - my-network


  ts-order-other-mongo:
    image: mongo
    networks:
      - my-network


  ts-config-service:
    build: ts-config-service
    image: ts-config-service
    restart: always
    ports:
      - 15679:15679
    networks:
      - my-network

  ts-config-mongo:
    image: mongo
    networks:
      - my-network

  ts-station-mongo:
    image: mongo
    networks:
      - my-network

  ts-train-mongo:
    image: mongo
    networks:
      - my-network

  ts-travel-service:
    build: ts-travel-service
    image: ts-travel-service
    restart: always
    ports:
      - 12346:12346
    networks:
      - my-network

  ts-travel-mongo:
    image: mongo
    networks:
      - my-network

  ts-travel2-service:
    build: ts-travel2-service
    image: ts-travel2-service
    restart: always
    ports:
      - 16346:16346
    networks:
      - my-network

  ts-travel2-mongo:
    image: mongo
    networks:
      - my-network

  ts-preserve-service:
    build: ts-preserve-service
    image: ts-preserve-service
    restart: always
    ports:
      - 14568:14568
    networks:
      - my-network

  ts-preserve-other-service:
    build: ts-preserve-other-service
    image: ts-preserve-other-service
    restart: always
    ports:
      - 14569:14569
    networks:
      - my-network


  ts-ticketinfo-service:
    build: ts-ticketinfo-service
    image: ts-ticketinfo-service
    restart: always
    ports:
      - 15681:15681
    networks:
      - my-network


  ts-price-mongo:
    image: mongo
    networks:
      - my-network

  ts-security-service:
    build: ts-security-service
    image: ts-security-service
    restart: always
    ports:
      - 11188:11188
    networks:
      - my-network

  ts-security-mongo:
    image: mongo
    networks:
      - my-network

  ts-inside-payment-mongo:
    image: mongo
    networks:
      - my-network

  ts-execute-service:
    build: ts-execute-service
    image: ts-execute-service
    restart: always
    ports:
      - 12386:12386
    networks:
      - my-network

  ts-payment-mongo:
    image: mongo
    networks:
      - my-network

  ts-rebook-service:
    build: ts-rebook-service
    image: ts-rebook-service
    restart: always
    ports:
      - 18886:18886
    networks:
      - my-network

  ts-rebook-mongo:
    image: mongo
    networks:
      - my-network

  ts-assurance-service:
    build: ts-assurance-service
    image: ts-assurance-service
    restart: always
    ports:
      - 18888:18888
    networks:
      - my-network

  ts-assurance-mongo:
    image: mongo
    networks:
      - my-network

  ts-seat-service:
    build: ts-seat-service
    image: ts-seat-service
    restart: always
    ports:
      - 18898:18898
    networks:
      - my-network

  ts-travel-plan-service:
    build: ts-travel-plan-service
    image: ts-travel-plan-service
    restart: always
    ports:
      - 14322:14322
    networks:
      - my-network

#  ts-ticket-office-service:
#    build: ts-ticket-office-service
#    image: ts-ticket-office-service
#    restart: always
#    ports:
#      - 16108:16108
#    networks:
#      - my-network
#
#  ts-ticket-office-mongo:
#    image: mongo
#    networks:
#      - my-network

  ts-news-service:
    build: ts-news-service
    image: ts-news-service
    restart: always
    ports:
      - 12862:12862
    networks:
      - my-network

  ts-news-mongo:
    image: mongo
    networks:
      - my-network

  ts-voucher-mysql:
    image: mysql
    expose:
      - "3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
    networks:
      - my-network

  ts-voucher-service:
    build: ts-voucher-service
    image: ts-voucher-service
    restart: always
    ports:
      - 16101:16101
    depends_on:
      - ts-voucher-mysql
    volumes:
      - /var/lib/mysql
    networks:
      - my-network

  ts-food-map-service:
    build: ts-food-map-service
    image: ts-food-map-service
    restart: always
    ports:
      - 18855:18855
    networks:
      - my-network

  ts-food-map-mongo:
    image: mongo
    networks:
      - my-network

  ts-route-plan-service:
    build: ts-route-plan-service
    image: ts-route-plan-service
    restart: always
    ports:
      - 14578:14578
    networks:
      - my-network

  ts-food-service:
    build: ts-food-service
    image: ts-food-service
    restart: always
    ports:
      - 18856:18856
    networks:
      - my-network

  ts-consign-service:
    build: ts-consign-service
    image: ts-consign-service
    restart: always
    ports:
      - 16111:16111
    networks:
      - my-network

  ts-consign-mongo:
    image: mongo
    networks:
      - my-network

  ts-consign-price-service:
    build: ts-consign-price-service
    image: ts-consign-price-service
    restart: always
    ports:
      - 16110:16110
    networks:
      - my-network

  ts-consign-price-mongo:
    image: mongo
    networks:
      - my-network

  ts-food-mongo:
    image: mongo
    networks:
      - my-network

  ts-admin-basic-info-service:
    build: ts-admin-basic-info-service
    image: ts-admin-basic-info-service
    restart: always
    ports:
      - 18767:18767
    networks:
      - my-network

  ts-admin-order-service:
    build: ts-admin-order-service
    image: ts-admin-order-service
    restart: always
    ports:
      - 16112:16112
    networks:
      - my-network

  ts-admin-route-service:
    build: ts-admin-route-service
    image: ts-admin-route-service
    restart: always
    ports:
      - 16113:16113
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - my-network

  ts-admin-travel-service:
    build: ts-admin-travel-service
    image: ts-admin-travel-service
    restart: always
    ports:
      - 16114:16114
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - my-network

  ts-admin-user-service:
    build: ts-admin-user-service
    image: ts-admin-user-service
    restart: always
    ports:
      - 16115:16115
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - my-network


networks:
  my-network:
    # driver: overlay
    driver: bridge





